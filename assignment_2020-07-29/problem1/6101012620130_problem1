#6101012620130
#REFERENCE: stackoverflow.com/questions/37099276/how-do-i-remove-a-specific-pygame-draw-on-click
import pygame
import pygame as pg
import pygame.camera
import sys
import random
from pygame.locals import *

window_wth ,window_hgt = 640, 480
window_resolution = window_wth, window_hgt

M, N = 10, 8

fps = 15

card_wth = 72
card_hgt = 92
gap_x = 77
gap_y = 97

c1 = (random.randrange(255), random.randrange(255), random.randrange(255))
c2 = (random.randrange(255), random.randrange(255), random.randrange(255))
c3 = (random.randrange(255), random.randrange(255), random.randrange(255))
c4 = (random.randrange(255), random.randrange(255), random.randrange(255))

bkg_colour = (30, 30, 30)
pg.display.set_caption("Game")
main_display = pg.display.set_mode(window_resolution)
background = pg.Surface(window_resolution)

pos_x = int((window_wth % gap_x) / 2)
pos_y = int((window_hgt % gap_y) / 2)

global cards

def open_camera(frame_size=(640, 480), mode='RGB'):
    pygame.camera.init()
    list_cameras = pygame.camera.list_cameras()
    print('Mumber of cameras found: ', len(list_cameras))
    if list_cameras:
        # use the first camera found
        camera = pygame.camera.Camera(list_cameras[0], frame_size, mode)
        return camera
    return None
pygame.init()
camera = open_camera()
if camera:
    camera.start()
else:
    print('Cannot open camera')
    sys.exit(-1)

screen = pygame.display.set_mode((window_wth, window_hgt))
surface = pygame.Surface(screen.get_size(), pygame.SRCALPHA)
img = None
is_running = True
while is_running:

    for e in pygame.event.get():
        if e.type == pygame.QUIT or (e.type == KEYDOWN and e.key == K_ESCAPE):
            is_running = False
            if img:
                # save the current image into the output file
                pygame.image.save(img, 'image.jpg')
    img = camera.get_image()
    if img is None:
        continue

    # get the image size
    img_rect = img.get_rect()
    img_w, img_h = img_rect.w, img_rect.h

class Card(object):
    def __init__(self, xpos, ypos, colour):
        super(Card, self).__init__()
        self.colour = colour
        self.xpos = xpos
        self.ypos = ypos
        self.width = 72
        self.height = 92
        self.rect = pg.Rect((xpos, ypos, self.width, self.height))

        R = random.randint(0, 255)
        G = random.randint(0, 255)
        B = random.randint(0, 255)
        # draw a green frame (tile)
        rect = (i * rw, j * rh, rw, rh)
        pygame.draw.rect(img, (R, G, B), rect, 0)
        surface.blit(img, rect, rect)


rw, rh = window_wth // M, window_hgt // N
for i in range(M):
    for j in range(N):
        R = random.randint(0, 255)
        G = random.randint(0, 255)
        B = random.randint(0, 255)
        # draw a green frame (tile)
        rect = (i * rw, j * rh, rw, rh)
        pygame.draw.rect(img, (R, G, B), rect, 0)
        surface.blit(img, rect, rect)


def make_cards(tt_pos_x, tt_pos_y):
    global cards
    cards = []
    for x in range(tt_pos_x, window_wth - gap_x, gap_x):
        for y in range(tt_pos_y, window_hgt - gap_y, gap_y):
            colour = (random.randrange(255), random.randrange(255), random.randrange(255))
            card = Card(x, y, colour)
            cards.append(card)
    return cards

def main():
    global fps_clock, main_display, cards
    fps_clock = pg.time.Clock()

    while True:


        if pg.mouse.get_pressed()[0]:
            print("mouse button pressed")
            pos = pg.mouse.get_pos()
            for card in cards:
                if card.rect.collidepoint(pos):
                    cards.remove(card)

        for event in pg.event.get():
            if event.type == pg.QUIT:
                sys.exit()

        fps_clock.tick(fps)
        update()

def update():
    global cards
    background.fill((0,0,0))
    for card in cards:
        pg.draw.rect(background, card.colour, card.rect, 5)

    main_display.blit(background, (0,0))
    pg.display.update()

if __name__ == '__main__':
    global cards
    cards = make_cards(pos_x, pos_y)
    pg.display.update()
    main()
